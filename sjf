#include<stdio.h>
#include<stdlib.h>
#include<math.h>
typedef struct
{
    int pid;
    int bursttime;
    int turnaroundtime;
    int waitingtime;
}process;
int main()
{
    process p[10];
    int i,n;
    int sumwaitingtime=0,sumturnaroundtime=0;
    printf("enter the no of process");
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        p[i].pid = i;
        printf("enter bursttime for process %d: ",i);
        scanf("%d",&p[i].bursttime);
        p[i].waitingtime = p[i].turnaroundtime = 0;
    }
    sorting(p,n);
    p[1].waitingtime = 0;
    p[1].turnaroundtime = p[1].bursttime;
    for(i=2;i<=n;i++)
    {
        p[i].waitingtime = p[i-1].waitingtime + p[i-1].bursttime;
        p[i].turnaroundtime = p[i].waitingtime + p[i].bursttime;
    }
    for (i = 1; i<=n; i++) {
        sumturnaroundtime += p[i].turnaroundtime;
        sumwaitingtime += p[i].waitingtime;
    }
    printf("Total Waiting Time : %d\n", sumwaitingtime);
    printf("Average Waiting Time : %f\n", (float)sumwaitingtime / n);
    printf("Total Turnaround Time : %d\n", sumturnaroundtime);
    printf("Average Turnaround Time : %f\n", (float)sumturnaroundtime / n);
    gauntchart(p,n);
}
void gauntchart(process p[],int n)
{
    int i,j;
    printf(" ");
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=p[i].bursttime;j++)
        {
            printf("--");
        }
        printf(" ");
    }
    printf("\n");
    for(i=1;i<=n;i++)
    {
        printf("|");
        for(j=1;j<p[i].bursttime;j++)
        {
            printf(" ");
            if(j==floor(p[i].bursttime/2))
            {
                printf("p%d",p[i].pid);
            }
            printf(" ");
        }
    }
    printf("|\n ");
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=p[i].bursttime;j++)
        {
            printf("--");
        }
        printf(" ");
    }
    printf("\n");
    printf("0");
    for(i=1;i<=n;i++)
    {
        for(j=0;j<=(p[i].bursttime*2)-1;j++)
        {
            printf(" ");
       }
        printf("%d",p[i].turnaroundtime);

    }
}
void sorting(process p[],int n)
{
    process temp;
    for (int i=0;i<n-1;i++)
    {
        for(int j=1;j<n-i;j++)
        {
            if(p[j].bursttime>p[j+1].bursttime)
            {
                temp = p[j];
                p[j] = p[j+1];
                p[j+1] = temp;
            }
        }
    }
}
